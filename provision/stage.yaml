- hosts: all
  vars:
  - timestamp: "{{ ansible_date_time.iso8601_basic }}"
  vars_files:
  - vars.yaml

  tasks:
  - name: Check if index exists
    stat:
      path: '{{ stage_dir }}/srv-solr-data/index'
    register: index_result

  - name: Get remote golr_index archive 
    get_url:
      url: '{{ golr_index_archive_url }}'
      dest: "/tmp/golr_index_{{ timestamp }}.tgz"
      timeout: 1000
    when: not index_result.stat.exists

  - name: ansible create golr_index directory
    file:
      path: '{{ stage_dir }}/srv-solr-data/index'
      state: directory
    when: not index_result.stat.exists

  - name: Untar index 
    unarchive:
      src:  "/tmp/golr_index_{{ timestamp }}.tgz" 
      dest: '{{ stage_dir }}/srv-solr-data/index'
      remote_src: yes
    when: not index_result.stat.exists

  - name: Remove golr_index archive
    file:
      path: "/tmp/golr_index_{{ timestamp }}.tgz"
      state: absent
    when: not index_result.stat.exists

  - name: Check if golr_timestamp.log file exists
    stat:
      path: "/{{ stage_dir }}/golr_timestamp.log"
    register: golr_timestamp_result

  - name: Get remote golr_timestamp.log 
    get_url:
      url: '{{ golr_timestamp }}'
      dest: "/{{ stage_dir }}/golr_timestamp.log"
      timeout: 1000
    when: not golr_timestamp_result.stat.exists

  - name: Check if release-archive-doi.json exists
    stat:
      path: "/{{ stage_dir }}/release-archive-doi.json"
    register: release_archive_doi_result

  - name: Get remote release-archive-doi.json
    get_url:
      url: '{{ release_archive_doi }}'
      dest: "/{{ stage_dir }}/release-archive-doi.json"
      timeout: 1000
    when: not release_archive_doi_result.stat.exists

  - name: install docker-compose.yaml and http configs
    template:
      src: '{{ item.file }}'
      dest: '{{ stage_dir }}/{{ item.dir }}'
    with_items:
      - { file: 'amigo.yaml', dir: '' }
      - { file: '001-inline-amigo.conf', dir: '' }
      - { file: 'apache2.ports.conf', dir: '' }
      - { file: 'docker-compose.yaml', dir: '' }
      - { file: 'httpd-vhosts-amigo.conf', dir: '' }
      - { file: 'httpd-vhosts-golr.conf', dir: '' }
      - { file: 'httpd.conf', dir: '' }
